{"version":3,"sources":["src/index.js"],"names":["canvas","document","querySelector","width","height","ctx","getContext","lineWidth","value","beforeColor","colorOption","Array","from","getElementsByClassName","destroy","eraser","isErase","isPainting","handleMove","event","lineTo","offsetX","offsetY","stroke","moveTo","handleDown","beginPath","handleUp","handleWidht","target","handleColor","strokeStyle","dataset","potato","handleDestroy","fillStyle","fillRect","clickErase","innerText","addEventListener","forEach","color"],"mappings":";AAAA,IAAMA,EAASC,SAASC,cAAc,UACtCF,EAAOG,MAAQ,IACfH,EAAOI,OAAS,IAEhB,IAAMC,EAAML,EAAOM,WAAW,MAExBC,EAAYN,SAASC,cAAc,eACzCG,EAAIE,UAAYA,EAAUC,MAE1B,IAMIC,EANEC,EAAcC,MAAMC,KAAKX,SAASY,uBAAuB,iBACzDC,EAAUb,SAASC,cAAc,YAEjCa,EAASd,SAASC,cAAc,WAElCc,GAAU,EAEVC,GAAa,EAEjB,SAASC,EAAWC,IACC,IAAfF,GACFZ,EAAIe,OAAOD,EAAME,QAASF,EAAMG,SAChCjB,EAAIkB,UAEJlB,EAAImB,OAAOL,EAAME,QAASF,EAAMG,SAIpC,SAASG,IACPpB,EAAIqB,YACJT,GAAa,EAEf,SAASU,IACPV,GAAa,EAGf,SAASW,EAAYT,GACnBd,EAAIE,UAAYY,EAAMU,OAAOrB,MAG/B,SAASsB,EAAYX,GACnBd,EAAI0B,YAAcZ,EAAMU,OAAOG,QAAQC,OACrBd,EAAMU,OAAOG,QAAQC,OAGzC,SAASC,IACP7B,EAAI8B,UAAY,QAChB9B,EAAI+B,SAAS,EAAG,EAAG,IAAK,KAG1B,SAASC,IACHrB,GACFA,GAAU,EACVD,EAAOuB,UAAY,SACnBjC,EAAI0B,YAActB,IAElBO,GAAU,EACVD,EAAOuB,UAAY,OACnB7B,EAAcJ,EAAI0B,YAClB1B,EAAI0B,YAAc,SAItB/B,EAAOuC,iBAAiB,YAAarB,GACrClB,EAAOuC,iBAAiB,YAAad,GACrCzB,EAAOuC,iBAAiB,UAAWZ,GAEnCpB,EAAUgC,iBAAiB,SAAUX,GAErClB,EAAY8B,QAAQ,SAACC,GAAD,OAAWA,EAAMF,iBAAiB,QAAST,KAE/DhB,EAAQyB,iBAAiB,QAASL,GAClCnB,EAAOwB,iBAAiB,QAASF","file":"src.c96f83d8.js","sourceRoot":"..","sourcesContent":["const canvas = document.querySelector(\"canvas\");\ncanvas.width = 800;\ncanvas.height = 800;\n\nconst ctx = canvas.getContext(\"2d\");\n\nconst lineWidth = document.querySelector(\"#line-width\");\nctx.lineWidth = lineWidth.value;\n\nconst colorOption = Array.from(document.getElementsByClassName(\"color-option\"));\nconst destroy = document.querySelector(\"#destroy\");\n\nconst eraser = document.querySelector(\"#eraser\");\n\nlet isErase = false;\nlet beforeColor;\nlet isPainting = false;\n\nfunction handleMove(event) {\n  if (isPainting === true) {\n    ctx.lineTo(event.offsetX, event.offsetY);\n    ctx.stroke();\n  } else {\n    ctx.moveTo(event.offsetX, event.offsetY);\n  }\n}\n\nfunction handleDown() {\n  ctx.beginPath();\n  isPainting = true;\n}\nfunction handleUp() {\n  isPainting = false;\n}\n\nfunction handleWidht(event) {\n  ctx.lineWidth = event.target.value;\n}\n\nfunction handleColor(event) {\n  ctx.strokeStyle = event.target.dataset.potato;\n  let beforeColor = event.target.dataset.potato;\n}\n\nfunction handleDestroy() {\n  ctx.fillStyle = \"white\";\n  ctx.fillRect(0, 0, 800, 800);\n}\n\nfunction clickErase() {\n  if (isErase) {\n    isErase = false;\n    eraser.innerText = \"Eraser\";\n    ctx.strokeStyle = beforeColor;\n  } else {\n    isErase = true;\n    eraser.innerText = \"Draw\";\n    beforeColor = ctx.strokeStyle;\n    ctx.strokeStyle = \"white\";\n  }\n}\n\ncanvas.addEventListener(\"mousemove\", handleMove);\ncanvas.addEventListener(\"mousedown\", handleDown);\ncanvas.addEventListener(\"mouseup\", handleUp);\n\nlineWidth.addEventListener(\"change\", handleWidht);\n\ncolorOption.forEach((color) => color.addEventListener(\"click\", handleColor));\n\ndestroy.addEventListener(\"click\", handleDestroy);\neraser.addEventListener(\"click\", clickErase);\n"]}